---
const themes = [
  {
    name: "Projektmanagement",
    subthemes: [
      { name: "Projekt Merkmale", path: "/Projekmanagement/Projekt_Merkmale" },
      { name: "SMART-Ziele", path: "/Projekmanagement/Smart" },
      { name: "Scrum", path: "/Projekmanagement/Scrum" },
      { name: "Kanban", path: "/Projekmanagement/Kanban" },
      { name: "Projektschritte", path: "/Projekmanagement/Projektschritte" },
      { name: "Stakeholder", path: "/Projekmanagement/Stakeholder" },
    ],
  },
  {
    name: "Sicherheit",
    subthemes: [
      { name: "Passwort Kriterien", path: "/Sicherheit/Passwort" },
      { name: "Datenschutz", path: "/Sicherheit/Datenschutz" },
      { name: "VPN", path: "/Sicherheit/VPN" },
      { name: "Personalbezogenendaten", path: "/Sicherheit/Personalbezogenendaten" },
      { name: "USV", path: "/Sicherheit/USV" },
      { name: "Firewall vs Mallware", path: "/Sicherheit/Firewall_vs_Mallware" },
      { name: "Härtung", path: "/Sicherheit/Haertung" },
      { name: "Gruppenrichtlinien", path: "/Sicherheit/Gruppenrichtlinien" },
    ],
  },
  {
    name: "Systemintegration",
    subthemes: [
      { name: "RAID", path: "/Systemintegration/RAID" },
      { name: "JBOD", path: "/Systemintegration/JBOD" },
      { name: "SSD vs Festplatten", path: "/Systemintegration/SSD_vs_Festplatten" },
      { name: "SAN vs NAS", path: "/Systemintegration/SAN_vs_NAS" },
      { name: "Logische Prozessoren", path: "/Systemintegration/Logische_Prozessoren" },
      { name: "Cache", path: "/Systemintegration/Cache" },
      { name: "OSI Modells", path: "/Systemintegration/OSI_Modells" },
      { name: "IPV4 vs IPV6", path: "/Systemintegration/IPV4_vs_IPV6" },
      { name: "Netzwerk Kommandos", path: "/Systemintegration/Netzwerk_Kommandos" },
      { name: "ADSL vs SDSL", path: "/Systemintegration/ADSL_vs_SDSL" },
      { name: "PC Modells", path: "/Systemintegration/PC_Modells" },
      { name: "BIOS vs UEFI", path: "/Systemintegration/BIOS_vs_UEFI" },
      { name: "Router vs Switch", path: "/Systemintegration/Router_vs_Switch" },
      { name: "Zentrale IT-Infrastuktur", path: "/Systemintegration/Zentrale_IT-Infrastuktur" },
      { name: "CMS vs DMS", path: "/Systemintegration/CMS_vs_DMS" },
      { name: "SaaS vs PaaS", path: "/Systemintegration/SaaS_vs_PaaS" },
      { name: "OSI Problemloesung", path: "/Systemintegration/OSI_Problemloesung" },
      { name: "OSI VLAN", path: "/Systemintegration/VLAN" },
    ],
  },
  {
    name: "Wirtschaft",
    subthemes: [
      { name: "Lastenheft", path: "/Wirtschaft/Lastenheft" },
      { name: "Service Preis Bestimmung", path: "/Wirtschaft/Service_Preis_Bestimmung" },
      { name: "Bedarfsanalyse Kunden", path: "/Wirtschaft/Bedarfsanalyse_Kunden" },
      { name: "4-Ohren-Modell", path: "/Wirtschaft/4-Ohren-Modell" },
      { name: "Ticketsystems", path: "/Wirtschaft/Ticketsystems" },
      { name: "Kaufvertrag", path: "/Wirtschaft/Kaufvertrag" },
      { name: "Leasing", path: "/Wirtschaft/Leasing" },
    ],
  },
  {
    name: "SQL",
    subthemes: [
      { name: "SQL Basic", path: "/SQL/SQL_Basic" },
      { name: "SQL API2", path: "/SQL/SQL_API2" },
    ],
  },
  {
    name: "Kalkulationen",
    subthemes: [
      { name: "Datenvolumenberechnung", path: "/Kalkulationen/Datenvolumenberechnung" },
      { name: "Ticketsystem Kosten", path: "/Kalkulationen/Ticketsystem_Kosten" },
      { name: "Arbeitsplätze Kosten", path: "/Kalkulationen/Arbeitsplaetze_Kosten" },
      { name: "Speichbedarf Berechnung", path: "/Kalkulationen/Speichbedarf_Berechnung" },
      { name: "Zahlensysteme", path: "/Kalkulationen/Zahlensysteme" },
      { name: "Stromkosten Berechnung", path: "/Kalkulationen/Stromkosten_Berechnung" },
      { name: "Übertragunsdauer", path: "/Kalkulationen/Übertragunsdauer" },
    ],
  },

  {
    name: "Anwendung_Basic",
    subthemes: [
      { name: "Pseudocode", path: "/Anwendung_Basic/Pseudocode" },
      { name: "Struktogramm", path: "/Anwendung_Basic/Struktogramm" },
    ],
  },
  {
    name: "PRACTICE",
    subthemes: [
      { name: "Practice", path: "/PRACTICE/Practice" },
    ],
  }
];

const themesPI2 = [
{
    name: "WISO",
    subthemes: [
      { name: "Mutterschutz", path: "/Wirtschaft_API2/Mutterschutz" },
      { name: "Bewerbung", path: "/Wirtschaft_API2/Bewerbung" },
      { name: "Mindesturlaub", path: "/Wirtschaft_API2/Mindesturlaub" },
      { name: "Arbeitszeugnis", path: "/Wirtschaft_API2/Arbeitszeugnis" },
      { name: "Betriebsrats", path: "/Wirtschaft_API2/Betriebsrats" },
      { name: "Arbeitslosengeld", path: "/Wirtschaft_API2/Arbeitslosengeld" },
      { name: "Wirtschaftsformen", path: "/Wirtschaft_API2/Wirtschaftsformen" },
    ],
  },
  {
    name: "Diagramm",
    subthemes: [
      { name: "Gantt Diagramm", path: "/Diagramm/Gantt_Diagramm" },
      { name: "UML-Klassenhierarchie", path: "/Diagramm/UML-Klassenhierarchie" },
      { name: "UML-Anwendungsfalldiagramm", path: "/Diagramm/UML-Anwendungsfalldiagramm" },
    ],
  },
  {
    name: "Programme",
    subthemes: [
      { name: "Programmierparadigmen", path: "/Programme/Programmierparadigmen" },
      { name: "Prozedure vs Funktion", path: "/Programme/Prozedure_vs_Funktion" },
      { name: "Imperativ vs Deklarativ", path: "/Programme/Imperativ_vs_Deklarativ" },
    ],
  },
  {
    name: "OPP",
    subthemes: [
      { name: "OPP", path: "/OPP/OPP" },
    ],
  },
  {
    name: "Algorithmen",
    subthemes: [
      { name: "Algorithmen Grundlagen", path: "/Algorithmen/Algorithmen_Grundlagen" },
      { name: "Insertion Sort", path: "/Algorithmen/Insertion_Sort" },
    ],
  },
  
]
---

<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/src/global.css">
    <title>Fachinformatiker Prüfungsvorbereitung IHK</title>
    <style>
      /* Custom scrollbar styles for the main content area */
      .scrollable {
        scrollbar-width: thin; /* Firefox */
        scrollbar-color: #4a5568 #2d3748; /* Firefox */
      }

      .scrollable::-webkit-scrollbar {
        width: 8px; /* Chrome, Safari, and Edge */
      }

      .scrollable::-webkit-scrollbar-track {
        background: #2d3748;
      }

      .scrollable::-webkit-scrollbar-thumb {
        background-color: #4a5568;
        border-radius: 10px;
        border: 2px solid #2d3748;
      }

      /* Mobile menu styles */
      .mobile-menu {
        transform: translateX(-100%);
        transition: transform 0.3s ease-in-out;
      }

      .mobile-menu.open {
        transform: translateX(0);
      }

      /* Overlay for mobile menu */
      .mobile-overlay {
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
      }

      .mobile-overlay.open {
        opacity: 1;
        visibility: visible;
      }
    </style>
  </head>
  <body class="flex flex-col min-h-screen">
    <!-- Header -->
    <header class="fixed top-0 left-0 w-full bg-gray-500 text-white p-4 text-center z-20">
      <div class="flex items-center justify-between">
        <!-- Mobile menu button -->
        <button id="mobile-menu-btn" class="lg:hidden text-white focus:outline-none">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
        
        <h1 class="text-xl font-bold flex-1">Fachinformatiker Prüfungsvorbereitung IHK</h1>
        
        <!-- Mobile practice buttons -->
        <div class="lg:hidden flex space-x-2">
          <a href="/PRACTICE/Practice" class="bg-gray-600 text-white px-2 py-1 rounded text-sm hover:bg-gray-700">API 1</a>
          <a href="/PRACTICE/Practice_API2" class="bg-gray-600 text-white px-2 py-1 rounded text-sm hover:bg-gray-700">API 2</a>
        </div>
      </div>
    </header>

    <!-- Mobile overlay -->
    <div id="mobile-overlay" class="mobile-overlay fixed inset-0 bg-black bg-opacity-50 z-30 lg:hidden"></div>

    <!-- Mobile menu -->
    <aside id="mobile-menu" class="mobile-menu fixed top-16 left-0 w-80 bg-gray-800 text-white p-4 h-[calc(100vh-4rem)] overflow-y-auto z-40 lg:hidden">
      <h2 class="text-xl font-bold mb-4">Prüfung Themen</h2>
      <h3 class="text-xl font-bold mb-4 bg-gray-400 rounded-lg pl-2">API 1</h3>
      <nav>
        {themes.map((theme) => (
          <details class="mb-2">
            <!-- Theme as accordion -->
            <summary class="cursor-pointer font-bold">{theme.name}</summary>
            {theme.subthemes.map((subtheme) => (
              <a href={subtheme.path} class="block p-2 hover:bg-gray-700 pl-6">
                {subtheme.name}
              </a>
            ))}
          </details>
        ))}
      </nav>
      <h3 class="text-xl font-bold mb-4 bg-gray-400 rounded-lg pl-2 mt-1"> API 2</h3>
      <nav>
        {themesPI2.map((themeAPI2) => (
          <details class="mb-2">
            <!-- Theme as accordion -->
            <summary class="cursor-pointer font-bold">{themeAPI2.name}</summary>
            {themeAPI2.subthemes.map((subtheme) => (
              <a href={subtheme.path} class="block p-2 hover:bg-gray-700 pl-6">
                {subtheme.name}
              </a>
            ))}
          </details>
        ))}
      </nav>
    </aside>

    <div class="flex flex-1 mt-16">
      <!-- Left Sidebar - Desktop only -->
      <aside class="hidden lg:block fixed top-16 left-0 w-64 bg-gray-800 text-white p-4 h-[calc(100vh-4rem)] overflow-y-auto z-10">
        <h2 class="text-xl font-bold mb-4">Prüfung Themen</h2>
        <h3 class="text-xl font-bold mb-4 bg-gray-400 rounded-lg pl-2">API 1</h3>
        <nav>
          {themes.map((theme) => (
            <details class="mb-2">
              <!-- Theme as accordion -->
              <summary class="cursor-pointer font-bold">{theme.name}</summary>
              {theme.subthemes.map((subtheme) => (
                <a href={subtheme.path} class="block p-2 hover:bg-gray-700 pl-6">
                  {subtheme.name}
                </a>
              ))}
            </details>
          ))}
        </nav>
        <h3 class="text-xl font-bold mb-4 bg-gray-400 rounded-lg pl-2 mt-1"> API 2</h3>
        <nav>
          {themesPI2.map((themeAPI2) => (
            <details class="mb-2">
              <!-- Theme as accordion -->
              <summary class="cursor-pointer font-bold">{themeAPI2.name}</summary>
              {themeAPI2.subthemes.map((subtheme) => (
                <a href={subtheme.path} class="block p-2 hover:bg-gray-700 pl-6">
                  {subtheme.name}
                </a>
              ))}
            </details>
          ))}
        </nav>
      </aside>

      <!-- Main content area -->
      <main class="flex-1 lg:ml-64 lg:mr-64 p-4 lg:p-8 scrollable mt-8 lg:mt-0">
        <slot />
      </main>

      <!-- Right Sidebar - Desktop only -->
      <aside class="hidden lg:block fixed top-16 right-0 w-64 bg-gray-800 text-white p-4 h-[calc(100vh-4rem)] overflow-y-auto">
        <a href="/PRACTICE/Practice" class="block bg-gray-500 text-white p-4 rounded-lg text-center text-lg font-semibold hover:bg-gray-400">Übungen API 1</a>
        <a href="/PRACTICE/Practice_API2" class="block bg-gray-500 text-white p-4 mt-4 rounded-lg text-center text-lg font-semibold hover:bg-gray-400">Übungen API 2</a>
      </aside>
    </div>

    <script>
      // Mobile menu functionality
      const mobileMenuBtn = document.getElementById('mobile-menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      const mobileOverlay = document.getElementById('mobile-overlay');

      function toggleMobileMenu() {
        mobileMenu.classList.toggle('open');
        mobileOverlay.classList.toggle('open');
      }

      function closeMobileMenu() {
        mobileMenu.classList.remove('open');
        mobileOverlay.classList.remove('open');
      }

      mobileMenuBtn.addEventListener('click', toggleMobileMenu);
      mobileOverlay.addEventListener('click', closeMobileMenu);

      // Close mobile menu when clicking on a link
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', closeMobileMenu);
      });

      // Close mobile menu on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          closeMobileMenu();
        }
      });
    </script>
  </body>
</html>
